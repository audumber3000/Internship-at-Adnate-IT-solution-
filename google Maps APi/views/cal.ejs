<!DOCTYPE html>
<html lang="en">

<head>
 
<style>
 
 #right-panel {
  font-family: 'Roboto','sans-serif';
  line-height: 30px;
  padding-left: 10px;
}

#right-panel select, #right-panel input {
  font-size: 15px;
}

#right-panel select {
  width: 100%;
}

#right-panel i {
  font-size: 12px;
}
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}
#map {
  height: 100%;
  float: left;
  width: 63%;
  height: 100%;
}
#right-panel {
  float: right;
  width: 34%;
  height: 100%;
}
.panel {
  height: 100%;
  overflow: auto;
}

</style>


</head>

<body>
    
  <div id="map"></div>
  <div id="right-panel">
    <p>Total Tolls: <span id="totalTollCount"></span></p>
    <p>Total Distance: <span id="total"></span></p>
  </div>
  <!-- Replace the value of the key parameter with your own API key. -->
  <script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuxI-ect9yK8dLwiwT2bLsIpPfq2j8Ar0&callback=initMap">
  </script>








  <script>

function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    zoom: 4,
    center: {lat: 18.520430, lng: 73.856743}  // Australia.
  });

  var directionsService = new google.maps.DirectionsService;
  var directionsDisplay = new google.maps.DirectionsRenderer({
    draggable: true,
    map: map,
    panel: document.getElementById('right-panel')
  });

  directionsDisplay.addListener('directions_changed', function() {
    computeTotalDistance(directionsDisplay.getDirections());
  });

  displayRoute('Pune, Maharashtra', 'Mumbai, Maharashtra', directionsService,
      directionsDisplay);
}



function displayRoute(origin, destination, service, display) {
  service.route({
    origin: origin,
    destination: destination,
    // waypoints: [{location: 'Adelaide, SA'}, {location: 'Broken Hill, NSW'}],
    travelMode: 'DRIVING',
    avoidTolls: false
  }, function(response, status) {
    if (status === 'OK') {
      display.setDirections(response);
      var route = directionsDisplay.getDirections().routes[0];
       console.log(route);
    } else {
      alert('Could not display directions due to: ' + status);
    }
  });
}



function containsWord(string, word) {
 
    return new RegExp('(?:[^.\w]|^|^\\W+)' + word + '(?:[^.\w]|\\W(?=\\W+|$)|$)').test(string);
}
function computeTotalDistance(result) {
  
  var total = 0;
  var myroute = result.routes[0];
  
  var totalTolls=0;
  for (var i = 0; i < myroute.legs.length; i++) {
  //console.log(myroute.legs[i].steps);
  for(var j=0;j<myroute.legs[i].steps.length;j++){
  //console.log(myroute.legs[i].steps[j].instructions);
  
  if(containsWord(myroute.legs[i].steps[j].instructions.toLowerCase(), 'toll road')){
    console.log("over");
    console.log(myroute.overview_path[i].lat.prototype)
  totalTolls+=1;
  }
  
  }
    total += myroute.legs[i].distance.value;
  }
  total = total / 1000;
  document.getElementById('total').innerHTML = total + ' km';
  document.getElementById('totalTollCount').innerHTML = totalTolls ;
}


  </script>
</body>

</html>