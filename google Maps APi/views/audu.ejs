<!DOCTYPE html>
<html>
	<head>
		<title>Geolocation</title>
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<meta charset="utf-8">
		<script src="soc.js"></script>
		<script src="/map/js/jquery-2.1.4.min.js"></script>
		<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuxI-ect9yK8dLwiwT2bLsIpPfq2j8Ar0&callback=initMap&libraries=&v=weekly" async defer></script>
		<style>
			html, body {
				height: 100%;
				margin: 0;
				padding: 0;
			}
			#map {
				height: 100%;
			}
		</style>
	</head>
	<body>
		<div id="map"></div>
		<script type="text/javascript">
var map;
function initMap() {
	map = new google.maps.Map(document.getElementById('map'), {
		center: {lat: 49.037, lng: 14.974},
		zoom: 2
	});
}

function getLocation() {
	if (navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(showPosition, hidePosition);
	}else{ 
		alert("Geolocation is not supported by this browser. Now we trying to get your location through your IP address.");
		ipPosition();
	}
}
function showPosition(position) {
	pos = {
		lat: parseFloat(position.coords.latitude),
		lng: parseFloat(position.coords.longitude)
	};

    console.log(pos);
    addMarker(pos);
}
function hidePosition(position) {
	alert('User denied the access of the position. Now we trying to get your location through your IP address.');
	ipPosition();
}
function ipPosition(){
	$.get("http://ipinfo.io", function (response) {
		var loc = response.loc.split(',');
		pos = {
			lat: parseFloat(loc[0]),
			lng: parseFloat(loc[1])
		};
	}, "jsonp");
}
getLocation();


var markers = [];
var getMarkerUniqueId= function(lat, lng) {
	return lat + '_' + lng;
}
function addMarker(location) { // Adds a marker to the map and push to the array.
	var markerId = getMarkerUniqueId(location.lat, location.lng); // that will be used to cache this marker in markers object.
	var marker = new google.maps.Marker({
		position: location,
		map: map,
		animation: google.maps.Animation.DROP,
		id: markerId
	});
	markers[markerId] = marker;
}
var removeMarker = function(marker, markerId) {
	marker.setMap(null); // set markers setMap to null to remove it from map
	delete markers[markerId]; // delete marker instance from markers object
};















			// Scripts
		</script>
	</body>
</html>